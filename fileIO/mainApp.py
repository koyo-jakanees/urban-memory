# -*- coding: utf-8 -*-
# credits: D. Thiebaut
# ref: http://www.science.smith.edu/dftwiki/index.php/PyQt5_Tutorial:_A_Window_Application_with_File_IO

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot
from mainwindow import Ui_MainWindow
import sys

class MainWindowUIClass(Ui_MainWindow):
    def __init__(self):
        """
        initialize the super class
        """
        super().__init__()
        
    def setupUi( self, MW):
        """
        seting up the UI of the Super class, add ad d here code that relates
        to the way we want the UI to Operate
        """
        super().setupUi(MW)
        # close the lower part of the splitter to hide the 
        # debug window under normal operations
        #TODO: debug the splitter attribute error
        self.splitter.setSizes([300, 0])
        
    def debugPrint(self, msg):
        """
        print the msg inthe text  edit at the bottom of horizontal splitter
        """
        self.debugTextBrowser.append(msg)
    
    # slor
    def returnPressedSlot(self):
        """
        Called when th euser enters string in the line edit and presses Enter 
        key
        """
        self.debugPrint('RETURN key pressed in the lineEdit widget')
    
    # sloit
    def writeDocSlot(self):
        """
        called when the user presses the write Doc push button
        """
        self.debugPrint('Write-Doc Button Pressed')
    
    # slot
    def browseSlot(self):
        """
        called when user has pressed browse button
        """
        self.debugPrint('Browse button Pressed')
    
def main():
    """
    MAIN ENTRY point of the application.
    code aat the end of the mainwindow.py not executed since this will be the 
    main script of the program.
    copy the code from the mainwindow.py generated by the '''pyuic5'''
    """
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = MainWindowUIClass()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
